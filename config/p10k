#!/usr/bin/env zsh

() {
  emulate -L zsh -o extended_glob

  typeset -g POWERLEVEL9K_BACKGROUND=                            # transparent background
  typeset -g POWERLEVEL9K_{LEFT,RIGHT}_{LEFT,RIGHT}_WHITESPACE=  # no surrounding whitespace
  typeset -g POWERLEVEL9K_{LEFT,RIGHT}_SUBSEGMENT_SEPARATOR=' '  # separate segments with a space
  typeset -g POWERLEVEL9K_{LEFT,RIGHT}_SEGMENT_SEPARATOR=        # no end-of-line symbol
  ###

  typeset -g POWERLEVEL9K_OS_ICON_CONTENT_EXPANSION=''
  typeset -g POWERLEVEL9K_PROMPT_CHAR_{OK,ERROR}_VIINS_CONTENT_EXPANSION='%%'
  typeset -g POWERLEVEL9K_DIR_FOREGROUND=241
  typeset -g POWERLEVEL9K_DIR_CLASSES=(
      '*github.com/(tektoncd|openshift-pipelines)/*'  WORK     ''
      '*' DEFAULT  ''
  )


  ##################################[ dir: current directory ]##################################
  typeset -g POWERLEVEL9K_DIR_FOREGROUND=31
  typeset -g POWERLEVEL9K_SHORTEN_STRATEGY=truncate_to_unique
  typeset -g POWERLEVEL9K_SHORTEN_DELIMITER=
  typeset -g POWERLEVEL9K_DIR_SHORTENED_FOREGROUND=103
  typeset -g POWERLEVEL9K_DIR_ANCHOR_FOREGROUND=39
  typeset -g POWERLEVEL9K_DIR_ANCHOR_BOLD=true
  local anchor_files=(
    .bzr .citc .git .hg .node-version .python-version .go-version
    .ruby-version .lua-version .java-version .perl-version .php-version
    .tool-version .shorten_folder_marker .svn .terraform CVS Cargo.toml
    composer.json go.mod package.json stack.yaml
  )
  typeset -g POWERLEVEL9K_SHORTEN_FOLDER_MARKER="(${(j:|:)anchor_files})"
  typeset -g POWERLEVEL9K_DIR_TRUNCATE_BEFORE_MARKER=false
  typeset -g POWERLEVEL9K_SHORTEN_DIR_LENGTH=1
  typeset -g POWERLEVEL9K_DIR_MAX_LENGTH=80
  typeset -g POWERLEVEL9K_DIR_MIN_COMMAND_COLUMNS=40
  typeset -g POWERLEVEL9K_DIR_MIN_COMMAND_COLUMNS_PCT=50
  typeset -g POWERLEVEL9K_DIR_HYPERLINK=false
  typeset -g POWERLEVEL9K_DIRENV_VISUAL_IDENTIFIER_EXPANSION=''
  typeset -g POWERLEVEL9K_DIR_WORK_VISUAL_IDENTIFIER_EXPANSION='⛑️ '
  typeset -g POWERLEVEL9K_VCS_UNTRACKED_ICON=''
  ##  KUBECONTEXT
  typeset -g POWERLEVEL9K_KUBECONTEXT_SHOW_ON_COMMAND='tkn|tkn-pac|kcs|ocla|oclaf|kubectl|helm|kubens|kubectx|oc|istioctl|kogito|k9s|helmfile|fluxctl|stern'
  typeset -g POWERLEVEL9K_KUBECONTEXT_DEFAULT_FOREGROUND=
  typeset -g POWERLEVEL9K_KUBECONTEXT_DEFAULT_VISUAL_IDENTIFIER_EXPANSION=''
  local cname=
  typeset -g POWERLEVEL9K_KUBECONTEXT_DEFAULT_CONTENT_EXPANSION='%F{13}${${${:-$KCS_PROFILE}:-$P9K_KUBECONTEXT_CLUSTER}}%f'
  POWERLEVEL9K_KUBECONTEXT_DEFAULT_CONTENT_EXPANSION+='/%F{3}${${:-$P9K_KUBECONTEXT_NAMESPACE}:-default}%f'

  ## Prompt
  typeset -g POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(
    dir
    vcs
    newline
    prompt_char
  )
  typeset -g POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(
    status
    command_execution_time
    background_jobs
    direnv
    virtualenv
    goenv
    kubecontext
    vim_shell
    newline
  )

  # VCS
  function my_git_formatter() {
      emulate -L zsh

      if [[ -n $P9K_CONTENT ]]; then
          # If P9K_CONTENT is not empty, use it. It's either "loading" or from vcs_info (not from
          # gitstatus plugin). VCS_STATUS_* parameters are not available in this case.
          typeset -g my_git_format=$P9K_CONTENT
          return
      fi

      if (( $1 )); then
          # Styling for up-to-date Git status.
          local       meta='%f'     # default foreground
          local      clean='%10F'   # green foreground
          local   modified='%226F'  # yellow foreground
          local  untracked='%162F'   # blue foreground
          local conflicted='%196F'  # red foreground
      else
          # Styling for incomplete and stale Git status.
          local       meta='%244F'  # grey foreground
          local      clean='%244F'  # grey foreground
          local   modified='%244F'  # grey foreground
          local  untracked='%244F'  # grey foreground
          local conflicted='%244F'  # grey foreground
      fi

      local res

      if [[ -n $VCS_STATUS_LOCAL_BRANCH ]]; then
          local branch=${(V)VCS_STATUS_LOCAL_BRANCH}
          # If local branch name is at most 32 characters long, show it in full.
          # Otherwise show the first 12 … the last 12.
          # Tip: To always show local branch name in full without truncation, delete the next line.
          (( $#branch > 32 )) && branch[13,-13]="…"  # <-- this line
          res+="${clean}${(g::)POWERLEVEL9K_VCS_BRANCH_ICON}${branch//\%/%%}"
      fi

      if [[ -n $VCS_STATUS_TAG
              # Show tag only if not on a branch.
              # Tip: To always show tag, delete the next line.
              && -z $VCS_STATUS_LOCAL_BRANCH  # <-- this line
          ]]; then
          local tag=${(V)VCS_STATUS_TAG}
          # If tag name is at most 32 characters long, show it in full.
          # Otherwise show the first 12 … the last 12.
          # Tip: To always show tag name in full without truncation, delete the next line.
          (( $#tag > 32 )) && tag[13,-13]="…"  # <-- this line
          res+="${meta}#${clean}${tag//\%/%%}"
      fi

      # Display the current Git commit if there is no branch and no tag.
      # Tip: To always display the current Git commit, delete the next line.
      [[ -z $VCS_STATUS_LOCAL_BRANCH && -z $VCS_STATUS_TAG ]] &&  # <-- this line
          res+="${meta}@${clean}${VCS_STATUS_COMMIT[1,8]}"

      # Show tracking branch name if it differs from local branch.
      if [[ -n ${VCS_STATUS_REMOTE_BRANCH:#$VCS_STATUS_LOCAL_BRANCH} ]]; then
          res+="${meta}:${clean}${(V)VCS_STATUS_REMOTE_BRANCH//\%/%%}"
      fi

      # Display "wip" if the latest commit's summary contains "wip" or "WIP".
      if [[ $VCS_STATUS_COMMIT_SUMMARY == (|*[^[:alnum:]])(wip|WIP)(|[^[:alnum:]]*) ]]; then
          res+=" ${modified}wip"
      fi

      # ⇣42 if behind the remote.
      (( VCS_STATUS_COMMITS_BEHIND )) && res+=" ${clean}⇣${VCS_STATUS_COMMITS_BEHIND}"
      # ⇡42 if ahead of the remote; no leading space if also behind the remote: ⇣42⇡42.
      (( VCS_STATUS_COMMITS_AHEAD && !VCS_STATUS_COMMITS_BEHIND )) && res+=" "
      (( VCS_STATUS_COMMITS_AHEAD  )) && res+="${clean}⇡${VCS_STATUS_COMMITS_AHEAD}"
      # ⇠42 if behind the push remote.
      (( VCS_STATUS_PUSH_COMMITS_BEHIND )) && res+=" ${clean}⇠${VCS_STATUS_PUSH_COMMITS_BEHIND}"
      (( VCS_STATUS_PUSH_COMMITS_AHEAD && !VCS_STATUS_PUSH_COMMITS_BEHIND )) && res+=" "
      # ⇢42 if ahead of the push remote; no leading space if also behind: ⇠42⇢42.
      (( VCS_STATUS_PUSH_COMMITS_AHEAD  )) && res+="${clean}⇢${VCS_STATUS_PUSH_COMMITS_AHEAD}"
      # *42 if have stashes.
      (( VCS_STATUS_STASHES        )) && res+=" ${clean}*${VCS_STATUS_STASHES}"
      # 'merge' if the repo is in an unusual state.
      [[ -n $VCS_STATUS_ACTION     ]] && res+=" ${conflicted}${VCS_STATUS_ACTION}"
      # ~42 if have merge conflicts.
      (( VCS_STATUS_NUM_CONFLICTED )) && res+=" ${conflicted}~${VCS_STATUS_NUM_CONFLICTED}"
      # +42 if have staged changes.
      (( VCS_STATUS_NUM_STAGED     )) && res+=" ${modified}+${VCS_STATUS_NUM_STAGED}"
      # !42 if have unstaged changes.
      (( VCS_STATUS_NUM_UNSTAGED   )) && res+=" ${modified}"$'\uF06A'"${VCS_STATUS_NUM_UNSTAGED}"
      # ?42 if have untracked files. It's really a question mark, your font isn't broken.
      # See POWERLEVEL9K_VCS_UNTRACKED_ICON above if you want to use a different icon.
      # Remove the next line if you don't want to see untracked files at all.
      (( VCS_STATUS_NUM_UNTRACKED  )) && res+=" ${untracked}${(g::)POWERLEVEL9K_VCS_UNTRACKED_ICON}${VCS_STATUS_NUM_UNTRACKED}"
      # "─" if the number of unstaged files is unknown. This can happen due to
      # POWERLEVEL9K_VCS_MAX_INDEX_SIZE_DIRTY (see below) being set to a non-negative number lower
      # than the number of files in the Git index, or due to bash.showDirtyState being set to false
      # in the repository config. The number of staged and untracked files may also be unknown
      # in this case.
      (( VCS_STATUS_HAS_UNSTAGED == -1 )) && res+=" ${modified}─"

      typeset -g my_git_format=$res
  }
  functions -M my_git_formatter 2>/dev/null

  typeset -g POWERLEVEL9K_VCS_MAX_INDEX_SIZE_DIRTY=-1
  typeset -g POWERLEVEL9K_VCS_DISABLED_WORKDIR_PATTERN='~'
  typeset -g POWERLEVEL9K_VCS_DISABLE_GITSTATUS_FORMATTING=true
  typeset -g POWERLEVEL9K_VCS_CONTENT_EXPANSION='${$((my_git_formatter(1)))+${my_git_format}}'
  typeset -g POWERLEVEL9K_VCS_LOADING_CONTENT_EXPANSION='${$((my_git_formatter(0)))+${my_git_format}}'
  typeset -g POWERLEVEL9K_VCS_{STAGED,UNSTAGED,UNTRACKED,CONFLICTED,COMMITS_AHEAD,COMMITS_BEHIND}_MAX_NUM=-1
  typeset -g POWERLEVEL9K_VCS_VISUAL_IDENTIFIER_COLOR=76
  typeset -g POWERLEVEL9K_VCS_LOADING_VISUAL_IDENTIFIER_COLOR=244
  typeset -g POWERLEVEL9K_VCS_VISUAL_IDENTIFIER_EXPANSION=
  typeset -g POWERLEVEL9K_VCS_BACKENDS=(git)
  typeset -g POWERLEVEL9K_VCS_CLEAN_FOREGROUND=76
  typeset -g POWERLEVEL9K_VCS_UNTRACKED_FOREGROUND=76
  typeset -g POWERLEVEL9K_VCS_MODIFIED_FOREGROUND=178

}


