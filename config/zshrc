# Chmouel Boudjnah <chmouel@chmouel.com>  -*- mode: shell-script; -*-
[[ -z ${ZDOTDIR} ]] && ZDOTDIR="$HOME/.config/zsh"
basehost=${HOST%%.*}
cachedir=${HOME}/.cache/zsh
[[ $1 == 'reloading' ]] && reload=yes
[[ -d  ${cachedir} ]] || mkdir -p ${cachedir}

powerlevel_prompt=
if [[ -e /opt/homebrew/opt/powerlevel10k/powerlevel10k.zsh-theme ]];then
    powerlevel_prompt=/opt/homebrew/opt/powerlevel10k/powerlevel10k.zsh-theme
elif [[ -e /usr/share/zsh-theme-powerlevel10k/powerlevel10k.zsh-theme ]];then
    powerlevel_prompt=/usr/share/zsh-theme-powerlevel10k/powerlevel10k.zsh-theme
fi

# We need that first
setopt nonomatch

#Local functions we want to autoload
typeset -U fpath
user_fun_path=(${ZDOTDIR}/functions ${ZDOTDIR}/functions/hosts/${basehost});
fpath=($user_fun_path $fpath); autoload -U compinit
for func ($user_fun_path) autoload -U $func/*(x:t)

# get environement and alias
source ${ZDOTDIR}/config/environement

# pre local config
[[ -e ${ZDOTDIR}/hosts/$basehost.sh ]] && source ${ZDOTDIR}/hosts/$basehost.sh

# aliases
source ${ZDOTDIR}/config/alias

if (( $+commands[upower] ));then
    upower -i /org/freedesktop/UPower/devices/line_power_AC0|grep -q "online:.*no" && \
    setopt no_inc_append_history || setopt inc_append_history
fi

#Compinit
[[ -z $reload ]] && compinit -i -d ${cachedir}/zcompdump

#PS1
if [[ -z ${CUSTOM_PROMPT} ]];then
    if [[ -n ${powerlevel_prompt} && -f "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]];then
        source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
    else
        autoload -U promptinit
        promptinit
        prompt chmou ${userColor}
    fi
fi

#Considers only alphanumeric as work like in bash
autoload -U select-word-style
select-word-style bash

# Path
typeset -U path
path=($HOME/.local/bin /usr/local/bin /usr/local/sbin /usr/sbin /sbin $path)

zmodload -i zsh/complist

#setopt
setopt nobeep COMPLETE_IN_WORD CORRECT EXTENDED_GLOB \
       AUTO_CD noFLOW_CONTROL AUTO_PUSHD noCompleteinword \
       interactivecomments nopromptcr \
       extended_history hist_ignore_all_dups \
       append_history hist_ignore_dups hist_ignore_space \
       hist_reduce_blanks hist_save_no_dups histverify nohistbeep \
       nohistignorespace auto_list no_auto_menu always_to_end


#cache completion
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ${cachedir}

#Completion style
zstyle ':completion:*' special-dirs true

# Completion menu
zstyle ':completion:*' menu select

# Ignore completion functions for commands you donâ€™t have
zstyle ':completion:*:functions' ignored-patterns '_*'

#Auto quote URL
autoload -U bracketed-paste-url-magic
zle -N bracketed-paste bracketed-paste-url-magic

# GIT support
autoload -Uz vcs_info
setopt promptsubst
zstyle ':vcs_info:*' unstagedstr '%F{red}*'
zstyle ':vcs_info:*' enable git
zstyle ':vcs_info:*' actionformats '%F{5}[%F{2}%b%F{3}|%F{1}%a%F{5}]%f'
zstyle ':vcs_info:*' formats '[%F{7}%b%f]'
zstyle ':vcs_info:*' check-for-changes true
zstyle ':vcs_info:git*' formats "%{$fg[cyan]%}%b%{$reset_color%}%m%u%c%{$reset_color%}"

# Kill support  https://github.com/zsh-users/zsh-completions/issues/93#issuecomment-8311702
zstyle ':completion:*:*:kill:*' menu yes select
zstyle ':completion:*:processes' command 'NOCOLORS=1 ps -U $(whoami)|sed "/ps/d"'
zstyle ':completion:*:processes' insert-ids menu yes select
zstyle ':completion:*:processes-names' command 'NOCOLORS=1 ps xho command|sed "s/://g"'
zstyle ':completion:*:processes' sort false

#Keys
bindkey -s '^Xd' "\`date '+%Y%m%d'\`\t" #`"
bindkey -s "^Xs" "^p^asudo ^e"
# M-# comment current line
bindkey '^[#' pound-insert


# Bind control-left/right properly
[[ -n ${terminfo[kLFT5]}  ]] && bindkey -- "${terminfo[kLFT5]}"  backward-word
[[ -n ${terminfo[kRIT5]}  ]] && bindkey -- "${terminfo[kRIT5]}"  forward-word
[[ -n ${terminfo[Home]}  ]] && bindkey -- "${terminfo[Home]}" beginning-of-line

#Ala emacs
zmodload -i zsh/deltochar
bindkey -e "^[z" zap-to-char

# Edit command line
autoload -U edit-command-line
zle -N edit-command-line
bindkey "^X^E" edit-command-line

#on ssh-copy-id compile user-at-host
compdef _user_at_host ssh-copy-id

# need to be after the "bindkey -e" if not plugins would not be able to bindkeys
[[ -z ${reload} && (( $+functions[vtplug] )) ]] && vtplug

# Local functions to source
for funp ($user_fun_path)
    for func (${funp}/* )
        [[ ${func} == *.source ]] && source ${func}

# last config at the end
[[ -f ${ZDOTDIR}/hosts/${basehost}-post.sh ]] && source ${ZDOTDIR}/hosts/${basehost}-post.sh

if [[ -z ${reload} && -n ${powerlevel_prompt} ]];then
    source ${ZDOTDIR}/config/p10k
    source ${powerlevel_prompt}
fi

# Unsetting variables to don't spread out
unset basehost func user_fun_path reload _dircolors cachedir powerlevel_prompt

# Emacs Tramp
if [[ "$TERM" = "dumb" ]];then
    unsetopt zle
    unsetopt prompt_cr
    unsetopt prompt_subst
    prompt off
fi

# vim: ft=zsh

