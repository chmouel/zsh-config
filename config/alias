#!/usr/bin/zsh
alias b="bzip2 -9vf"
alias z="gzip -9fv"
alias md="mkdir -p"

alias ls="ls --color=auto -F"
alias d=ls
alias s="cd .."
alias p="cd -"
alias ll="ls -arSlh"
alias la="ls -A"
alias lt="ls -artl"

alias df="df -h"
alias du="du -sh"
alias cp="cp -i"
alias rm="rm -i"
alias mv="mv -i"
alias ppgrep="ps aux|grep"

test -d $HOME/.local/share/rc && alias cdrr="cd $HOME/.local/share/rc"

(( $+commands[bat] )) && alias less=bat
(( $+commands[tmux] )) && alias ta='TERM=xterm-256color tmux new-session -A -s main'

alias vih="$EDITOR $confdir/hosts/${HOST%%.*}.sh"
if [[ -d ${HOME}/.config/yadm ]];then
    alias cdf="cd ${HOME}/.config/yadm/hosts/${HOST%%.*}"
else
    alias cdf="cd $confdir/functions/hosts/${HOST%%.*}"
fi

(( $+commands[fin] )) && alias fina="fin -a"
alias j=chmoujump # comes from our zsh plugin
alias jn="j -n"

(( $+commands[upower] )) && \
    alias battery='upower -i /org/freedesktop/UPower/devices/battery_BAT0| grep -E "state|to\ full|percentage"'

function gcm() {
    git checkout $(git --no-pager branch -l --no-color|sed -rn '/.*(master|main)/ { s/^..//;p;Q;}')
    (( $+commands[gh] )) && git remote -v |grep -q github.com && gh repo sync
    git remote|grep -qw chmouel && git remote prune chmouel
    git branch --merged|sed 's/^..//'|egrep -vw '(main|master)'|xargs -r git branch -d
}
(( $+commands[gh] )) && alias ghissuecreate="gh issue create -R ${PWD:t2}"

(( $+commands[systemctl] )) && {
    alias ss="sudo -E systemctl"
    alias ssu="systemctl --user"
}
(( $+commands[tailf] )) || alias tailf="tail -F"
(( $+commands[rg] )) && alias g=rg

(( $+commands[pacman] )) && {
  alias inst="sudo pacman -S"
  alias yinst="yay -S"
  alias remove="sudo pacman -Rcs"
  alias lastinstalled="expac --timefmt='%Y-%m-%d %T' '%l\t%n' | sort -r| bat"

  _fpac() {
      packages=$(awk {'print $1'} <<< $(${1} -Ss ${2} | awk 'NR%2 {printf "\033[1;32m%s \033[0;36m%s\033[0m â€” ",$1,$2;next;}{ print substr($0, 5, length($0) - 4); }' | fzf -m --ansi))
      [ "$packages" ] && yay -S $(echo "$packages" | tr "\n" " ")
  }
  alias ysearch="_fpac yay"
  alias ysearch2="yay --color=always -Ss"
  alias search="_fpac pacman"
  alias search2="pacman --color=always -Ss"
}

(( $+commands[xdg-open] )) && alias open=xdg-open
(( $+commands[yadm] )) && alias y=yadm


[[ -d $GOPATH/src/github.com/tektoncd/ ]] && {
    alias pp="cd $GOPATH/src/github.com/tektoncd/pipeline"
    alias pc="cd $GOPATH/src/github.com/tektoncd/cli"
    alias pl="cd $GOPATH/src/github.com/tektoncd/catalog"
}
[[ -d $GOPATH/src/github.com/openshift-pipelines/ ]] && {
    alias pm="cd $GOPATH/src/github.com/openshift-pipelines/pipelines-as-code"
}


#Zsh: Alias
alias -g L="|& less"
(( $+commands[jq] )) && alias -g MJ="| jq -C '.'"  || alias -g MJ="| python -mjson.tool"
(( $+commands[jq] )) && {
	 alias -g JST="-o json|jq .status"
	 alias -g JS="-o json|jq "
	 alias -g YJ="-o yaml|yjq"
}
(( $+commands[fzf] )) && alias -g F="| fzf"

# Direnv
(( $+commands[direnv] )) && eval "$(direnv hook zsh)"

# LS
(( $+commands[gls] )) &&  alias ls="gls --color=auto -F"
(( $+commands[exa] )) && {
    alias ll="exa --icons --git --colour-scale -arlh";
    export EXA_COLORS='in=37:ur=1;36:uw=1;33:ux=1;32:gr=36:gw=33:gx=32:tr=36:tw=33:tx=32:sn=32:sb=1;32:lc=37:uu=35:gu=35:un=1;31:gn=1;31:da=36';
}

(( $+commands[bat] )) && {
    alias -g BY="| bat -l yaml"
    alias -g BJ="| jq -C |bat"
}

# Source code highlight
(( $+commands[lesspipe.sh] )) && export LESSOPEN="| =lesspipe.sh %s" 

alias gg="git grep"
alias ggd="git diff --ignore-space-at-eol -b -w --ignore-blank-lines"
alias gb="git checkout -b"
alias pr="git pr"
alias gs="git switch -"
alias gc="git checkout"
alias gcb="git checkout -b"
# to copy easily the gopath
alias gpath='pwd -P|sed "s,$GOPATH/src/github.com/,,"'

(( $+commands[git-branch-show] )) && alias gbs="git-browse-show"
(( $+commands[git-branch-list] )) && {
    alias gbl="git-branch-list -f"
    alias gbk="git-branch-list -d"
}
(( $+functions[ghpr] )) && alias ghprf="ghpr -f"

(( $+functions[zshz] )) && alias z=zshz

alias so="source $confdir/.zshrc reloading && unset reload"
alias incognito="unset HISTFILE"
alias o='popd'

alias -g EEL=' 2>&1 | less'
alias -g GB='`git rev-parse --abbrev-ref HEAD`'
alias -g GR='`git config branch.$(git rev-parse --abbrev-ref HEAD).remote`'
alias -g GROOT='`git rev-parse --show-toplevel`'

