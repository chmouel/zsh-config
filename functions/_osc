#compdef osc

__osc_top_commands() {
    local rets
    rets=(login logout project new-project new-app status start-build
      cancel-build build-logs deploy rollback env expose get describe create
      process edit update delete logs exec port-forward proxy version config
      resize stop label help)
    _describe -t osc-commands "OpenShift command" rets
}

__osc_types () {
    local rets
    rets=(persistentVolumeClaims persistentVolumes pods nodes build replicationcontrollers
          deploymentConfigs buildConfigs imageStreams imageStreamTags imageStreamImages route
          service options template)
    _describe -t osc-types "OpenShift types" rets
}

__osc_output () {
    local rets
    rets=(json yaml)
    _describe -t osc-output "OpenShift Output" rets
}

__osc_running-pods () {
    rets=($(osc get pods|sed '1d'|awk '{print $1}'))
    _describe -t osc-running-pods "Running Pods" rets
}

__osc_build () {
    local rets
    rets=($(osc get builds|sed '1d'|awk '{print $1}'))
    _describe -t osc-running-pods "Running Build" build
}

__osc_subcommand () {
    case "$words[1]" in
        (create)
            _arguments \
                {-h,--help}"[show help]" \
                {-f,--file=}"[template file]:filename:_files"
            ;;
        (get)
            _arguments \
                {-o,--ouput}"[output]:output:__osc_output" \
                {-h,--help}"[show help]" \
                ':osctypes:__osc_types'
            ;;
        (start-build)
            _arguments ':oscbuild:__osc_build'
            ;;
        (help)
            _arguments \
                ':vmosc_command:__osc_top_commands'
            ;;
         (*)
             _message 'Unkown sub command'
      esac

    case "$words[2]" in
        (pods)
            __osc_running-pods
            ;;
    esac

}

_osc () {
    local curcontext="$curcontext" state
    _arguments -C \
        '(-): :->command' \
        '(-)*:: :->option-or-argument'
    case $state in
        (command)
            __osc_top_commands
            ;;
        (option-or-argument)
            curcontext=${curcontext%:*:*}:osc-$words[1]:
            __osc_subcommand
            ;;
    esac
}

_osc "$@"
