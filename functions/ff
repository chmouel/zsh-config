#!/usr/bin/env zsh

_ff() {
    zmodload zsh/zutil
    zparseopts -D -E -F - {h,-help}=help {s,-sort-new}=sort_n p=opt_project n=opt_noignore d=opt_dir || exit 1
    end_opts=$@[(i)(--|-)]
    set -- "${@[0,end_opts-1]}" "${@[end_opts+1,-1]}"
    local i ignores="--ignore-vcs"
    local fd=fd toplevel=
    local fzfopts="--exact --bind alt-n:next-history,alt-p:previous-history,ctrl-j:preview-down,ctrl-k:preview-up,ctrl-n:down,ctrl-p:up"
    local fdopts
    (( $+commands[fdfind] )) && fd=fdfind
    #for i (.gitignore .ignore) [[ -e ${i} ]] && ignores+=" --ignore-file=${i}"
    [[ -n ${opt_dir} ]] && fdopts+=" --type=d" || fdopts+=" --type=f"
    [[ -n ${opt_noignore} ]] && ignores=-I
    [[ -n ${sort_n} ]] && sort_n="--exec-batch ls --color -1dt"
    [[ -n ${help} ]] && {
        echo "-n noignore -d only directory -s sort by newer"
        return
    }

    [[ -n ${opt_project} ]] && {
        toplevel=$(git rev-parse --show-toplevel)
        [[ -z ${toplevel} ]] && return 1
        toplevel="--base-directory ${toplevel}"
    }

    [[ -n $@ ]] && fzfopts+=" -q $@";
    mkdir -p $HOME/.cache/zsh/fh

    # echo ${fd} ${=toplevel} --color=always -H -E '.git/*' ${=fdopts} \
    #     --strip-cwd-prefix \
    #     -E ".git/" \
    #     ${=ignores} ${=sort_n}
    ${fd} ${=toplevel} --color=always -H -E '.git/*' ${=fdopts} \
        --strip-cwd-prefix \
        -E ".git/" \
        ${=ignores} ${=sort_n} | \
        fzf \
          --ansi \
          --border=rounded \
          --preview="(test -d {} && tree -ahpCL 3 -I '.git' -I '*.py[co]' -I '__pycache__' {} || bat --color=always {})|head -n 100" \
          --history=$HOME/.cache/zsh/fh/$(echo ${PWD}|md5sum|sed 's/ .*//') \
          -0 -1 -m ${=fzfopts}
}

_ff $@
